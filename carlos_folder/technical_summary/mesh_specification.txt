// Mesh networking protocol 
// designed for a Nordic
// NRF24L01+ and Arduino 
// UNO micro-controller

The protocol defines a shared mesh network topology for wireless data transmission. It features the basic functionalities of a mesh network including data relay through multiple nodes, automatic topology maintainance, prevention of routing loops and rudimentary path optimization all achieved on hardware supporting half-duplex transmission. To build this foundation, a header consisting of five of the thirty-two byte payload is constructed to transfer pertinant information regarding the transmission occurring between nodes. This header is defined as follows:

MSB 									           LSB
---------------------------------------------------------
| to node | from node | final node | message  | message |
| address | address   | address    | lifetime | type    |
| 2 HEX   | 2 HEX     | 2 HEX      | uint_8   | 1 char  |
| 1 byte  | 1 byte    | 1 byte     | 1 byte   | 1 byte  |
---------------------------------------------------------

1. The 'to node' address is the address of the most recent handler of the message; this could be the original sender or a forwarding node.
2. The 'from node' address is the address of the original sender. 'to node' == 'from node' iff the recipient is directly connected to the sender.
3. The 'final node' address is the address of the destination node.
4. Message lifetime implements a counter that decrements every time it is forwarded or 'hops' to prevent routing loops and network flooding. The value is a unsigned integer so the maximum count is two hundred and fifty-five hops before the message is terminated.
5. Message type carries a char 'M' for 'message' type transmission or a 'B' for a 'broadcast' type transmission.

The remaining twenty-seven bytes (after the LSB) are left to transport ASCII coded characters ie. the message. If the message to be sent is greater than twenty-seven characters, the system truncates the message and sends it void but with a legitament header. 

The prevention of routing loops relies on the three principles:
1. 'Message lifetime' routine: A message may propagate through the network for a total amount of relays described by this value. When the value reaches zero, the last recipient discards the message ceasing the forwarding rountine and preventing the network from becoming flooded. Has the greatest effect when the recipient is not currently on the network which would cause the message to endlessly search for its destination. 
2. 'Direct routing priority' (DRP): The protocol maintains a chronological stack of nodes where the top node(1) is the most recently connected to via the 'broadcast' routine. The logic makes the assumption that the most recent point of contact will represent the most reliable route and thus will send the message though said node. If a connection between sender and node(1) is infact lost, then the next most recent connection in the stack will become the primary route and so on. 
3. Method of 'no return': Upon receipt of a message, the system drops into 'relay' mode where it decides whether the message is for it or to be passed on. In the event of the message being relayed, the protocol would automatically send via the top node on the stack (DRP) but if this node is where the message orginated, the next node in the stack will be selected as primary route to prevent the message being continually passed back and forth between two neighbors whom are each others node(1).

The 'broadcast' routine maintains the chronological stack and therefore maintains the one-hop neighbor topology for each node. This method leverages the self similarity characteristic of a multicast network topology with the added feature of methodically selecting the neighbor who provides the most reliable path to the destination thus saving on power consumption of the transmitting node along with minimizing the per-node network bandwidth consumption. This allows an increased total data throughput on a shared frequency band.

Due to the potential latency involved with the natural redundancy of a mesh network, path optimization and route reliability need to be addressed. To do so the protocol leverages the 'direct routing priority' and its chronological stack. The protocol first checks the stack to see if it has recently been connected to the destination node, if so, the message is sent directly, if not, the message is forwarded on to node(1) on the stack. Like before, if node(1) is no longer connected before the  'broadcast' routine has a chance to update the stack, the message will be forwarded to the next available node.

The properties of this protocol allow it to keep itself up to date with the local topology and adjust for changes at a rate equal to the frequency of the 'broadcast' method. This protocol lays a foundation consisting of the requisite behavior of a rudimentary half-duplex mesh network and given more processing power or a chip supporting multiple parallel processes, the exisiting features can easily be richened to provide a even more effective platform. 





